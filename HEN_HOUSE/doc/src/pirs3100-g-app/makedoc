#!/bin/bash
#
# Script to build the g-code documentation.
#
# Documentation built using Doxygen's ability to parse Fortran
# comments. 
#

my_machine=`cat $EGS_CONFIG | grep "my_machine =" | sed 's/my_machine = //'`
docdir=$PWD
eh=$EGS_HOME
update_eq=no
#
# Parse command line for arguments
#
while test $# -gt 0; do
    case "$1" in
      dir=*) docdir=`echo $1 | sed 's/dir=//'` ;;
       eh=*) eh=`echo $1 | sed 's/eh=//'` ;;
       eq=*) update_eq=`echo $1 | sed 's/eq=//'` ;;
   config=*) my_machine=`echo $1 | sed 's/config=//'` ;;
    esac
    shift
done

echo PWD: $PWD
echo docdir: $docdir
echo EGS_HOME: $eh
echo config: $my_machine

#if [ "$docdir" != $PWD ] && [ "$my_machine" != template ]; then
# echo "$docdir not equal to $PWD !"
#else
# echo "$docdir equal to $PWD !"
#fi
#exit 0


######################################################
# What if no EGSnrc? Use the provided Fortran source!
######################################################
if test "x$my_machine" = x; then
 my_machine=template
fi

if test -d "$eh"; then
 cd $eh/g
 make fortran
 echo 'C> @endcond' >> g_${my_machine}.f
 mv $docdir/g_template.f $docdir/g_template.f.OK
 rm -f $docdir/*.f
 cp g_${my_machine}.f $docdir/g_current.f
fi

if test "$docdir" != $PWD; then
 cd $docdir
fi

# Needed if equations modified
if [[ "$update_eq" == yes ]];then
   rm -f html/*form*.*
fi
doxygen
mv $docdir/g_template.f.OK $docdir/g_template.f

###########################################
# Backticks for code span and decimal dots 
# translated to Latex with
# \+ prepended to each character
##########################################
for filename in latex/*.tex
do
  if [[ "$filename" == latex/refman.tex ]];then
     sed -e "s/large Generated by/large E. Mainegra-Hing, R.W. Townson, D.W.O. Rogers, and I. Kawrakow}\\\\\\\ \n\\\vspace*{1cm}\n{\\\large Generated on \\\today~ with /g" -i $filename
  fi
done

exit 0

